# Generated by Django 4.2.24 on 2025-09-27 04:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.core.validators
from decimal import Decimal


class Migration(migrations.Migration):

    dependencies = [
        ('finances', '0002_alter_infraccion_created_at_and_more'),
        ('properties', '0003_remove_unidadhabitacional_piso_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Crear tabla infracciones si no existe
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS infracciones (
                id BIGSERIAL PRIMARY KEY,
                tipo_infraccion VARCHAR(50) DEFAULT 'otros' NOT NULL,
                descripcion TEXT NOT NULL,
                fecha_infraccion TIMESTAMP WITH TIME ZONE NOT NULL,
                evidencia_url TEXT,
                monto_multa NUMERIC(10, 2),
                fecha_limite_pago DATE,
                estado VARCHAR(20) DEFAULT 'registrada' NOT NULL,
                observaciones_admin TEXT DEFAULT '' NOT NULL,
                es_reincidente BOOLEAN DEFAULT false NOT NULL,
                fecha_creacion TIMESTAMP WITH TIME ZONE NOT NULL,
                fecha_actualizacion TIMESTAMP WITH TIME ZONE NOT NULL,
                id_propietario BIGINT NOT NULL,
                reportado_por BIGINT,
                unidad BIGINT NOT NULL,
                CONSTRAINT infracciones_propietario_fkey
                    FOREIGN KEY (id_propietario) REFERENCES propietarios(id) ON DELETE CASCADE,
                CONSTRAINT infracciones_reportado_por_fkey
                    FOREIGN KEY (reportado_por) REFERENCES usuarios(id) ON DELETE SET NULL,
                CONSTRAINT infracciones_unidad_fkey
                    FOREIGN KEY (unidad) REFERENCES unidades_habitacionales(id) ON DELETE CASCADE
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS infracciones;"
        ),

        # Crear tabla configuracion_multas si no existe
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS configuracion_multas (
                id BIGSERIAL PRIMARY KEY,
                tipo_infraccion VARCHAR(50) UNIQUE NOT NULL,
                monto_base NUMERIC(10, 2) NOT NULL,
                monto_reincidencia NUMERIC(10, 2) NOT NULL,
                dias_para_pago INTEGER DEFAULT 15 NOT NULL,
                es_activa BOOLEAN DEFAULT true NOT NULL,
                descripcion TEXT DEFAULT '' NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE NOT NULL,
                updated_at TIMESTAMP WITH TIME ZONE NOT NULL,
                CONSTRAINT configuracion_multas_monto_base_check
                    CHECK (monto_base >= 0.00),
                CONSTRAINT configuracion_multas_monto_reincidencia_check
                    CHECK (monto_reincidencia >= 0.00),
                CONSTRAINT configuracion_multas_dias_para_pago_check
                    CHECK (dias_para_pago >= 0)
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS configuracion_multas;"
        ),

        # Agregar columnas faltantes a la tabla cargos si no existen
        migrations.RunSQL(
            """
            DO $$
            BEGIN
                -- Agregar unidad_id si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='unidad_id') THEN
                    ALTER TABLE cargos ADD COLUMN unidad_id BIGINT;
                END IF;

                -- Agregar es_recurrente si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='es_recurrente') THEN
                    ALTER TABLE cargos ADD COLUMN es_recurrente BOOLEAN DEFAULT false NOT NULL;
                END IF;

                -- Agregar periodo si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='periodo') THEN
                    ALTER TABLE cargos ADD COLUMN periodo VARCHAR(20) DEFAULT '' NOT NULL;
                END IF;

                -- Agregar infraccion_id si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='infraccion_id') THEN
                    ALTER TABLE cargos ADD COLUMN infraccion_id BIGINT;
                END IF;

                -- Agregar monto_pagado si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='monto_pagado') THEN
                    ALTER TABLE cargos ADD COLUMN monto_pagado NUMERIC(10, 2) DEFAULT 0.00 NOT NULL;
                END IF;

                -- Agregar tasa_interes_mora si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='tasa_interes_mora') THEN
                    ALTER TABLE cargos ADD COLUMN tasa_interes_mora NUMERIC(5, 2) DEFAULT 2.00 NOT NULL;
                END IF;

                -- Agregar observaciones si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns
                              WHERE table_name='cargos' AND column_name='observaciones') THEN
                    ALTER TABLE cargos ADD COLUMN observaciones TEXT DEFAULT '' NOT NULL;
                END IF;
            END $$;
            """,
            reverse_sql=""
        ),

        # Agregar foreign keys a la tabla cargos si no existen
        migrations.RunSQL(
            """
            DO $$
            BEGIN
                -- Agregar FK para unidad_id si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints
                              WHERE constraint_name='cargos_unidad_id_fkey') THEN
                    ALTER TABLE cargos ADD CONSTRAINT cargos_unidad_id_fkey
                        FOREIGN KEY (unidad_id) REFERENCES unidades_habitacionales(id) ON DELETE CASCADE;
                END IF;

                -- Agregar FK para infraccion_id si no existe
                IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints
                              WHERE constraint_name='cargos_infraccion_id_fkey') THEN
                    ALTER TABLE cargos ADD CONSTRAINT cargos_infraccion_id_fkey
                        FOREIGN KEY (infraccion_id) REFERENCES infracciones(id) ON DELETE CASCADE;
                END IF;

                -- Agregar FK para propietario si no existe (con el nombre correcto)
                IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints
                              WHERE constraint_name='cargos_propietario_id_fkey') THEN
                    ALTER TABLE cargos ADD CONSTRAINT cargos_propietario_id_fkey
                        FOREIGN KEY (id_propietario) REFERENCES propietarios(id) ON DELETE CASCADE;
                END IF;
            END $$;
            """,
            reverse_sql=""
        ),

        # Agregar Ã­ndices para mejorar rendimiento
        migrations.RunSQL(
            """
            CREATE INDEX IF NOT EXISTS infracciones_propietario_idx ON infracciones(id_propietario);
            CREATE INDEX IF NOT EXISTS infracciones_unidad_idx ON infracciones(unidad);
            CREATE INDEX IF NOT EXISTS infracciones_estado_idx ON infracciones(estado);
            CREATE INDEX IF NOT EXISTS infracciones_fecha_idx ON infracciones(fecha_infraccion);

            CREATE INDEX IF NOT EXISTS cargos_propietario_idx ON cargos(id_propietario);
            CREATE INDEX IF NOT EXISTS cargos_unidad_idx ON cargos(unidad_id);
            CREATE INDEX IF NOT EXISTS cargos_estado_idx ON cargos(estado);
            CREATE INDEX IF NOT EXISTS cargos_vencimiento_idx ON cargos(fecha_vencimiento);
            """,
            reverse_sql=""
        ),
    ]
