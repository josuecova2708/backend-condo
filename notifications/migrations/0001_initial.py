# Generated by Django 4.2.24 on 2025-09-29 02:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('reservation_confirmed', 'Reserva Confirmada'), ('reservation_reminder', 'Recordatorio de Reserva'), ('new_charge', 'Nuevo Cargo'), ('payment_due', 'Pago Vencido'), ('general', 'General')], help_text='Tipo de notificación', max_length=30, unique=True)),
                ('title_template', models.CharField(help_text='Plantilla del título (puede usar variables como {name})', max_length=100)),
                ('body_template', models.TextField(help_text='Plantilla del cuerpo (puede usar variables como {area}, {date})')),
                ('is_active', models.BooleanField(default=True, help_text='Si la plantilla está activa')),
            ],
            options={
                'verbose_name': 'Plantilla de Notificación',
                'verbose_name_plural': 'Plantillas de Notificaciones',
                'db_table': 'notification_templates',
                'ordering': ['notification_type'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(help_text='Tipo de notificación', max_length=30)),
                ('title', models.CharField(help_text='Título de la notificación', max_length=100)),
                ('body', models.TextField(help_text='Cuerpo de la notificación')),
                ('data', models.JSONField(blank=True, default=dict, help_text='Datos adicionales (entity_id, type, etc.)')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviada'), ('failed', 'Fallida'), ('read', 'Leída')], default='pending', help_text='Estado de la notificación', max_length=10)),
                ('fcm_message_id', models.CharField(blank=True, help_text='ID del mensaje FCM', max_length=100, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Mensaje de error si falla el envío', null=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='Fecha cuando se leyó la notificación', null=True)),
                ('user', models.ForeignKey(help_text='Usuario que recibe la notificación', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FCMToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.TextField(help_text='Token FCM del dispositivo')),
                ('device_type', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS')], default='android', help_text='Tipo de dispositivo', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Si el token está activo')),
                ('user', models.ForeignKey(help_text='Usuario propietario del token', on_delete=django.db.models.deletion.CASCADE, related_name='fcm_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token FCM',
                'verbose_name_plural': 'Tokens FCM',
                'db_table': 'fcm_tokens',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'token')},
            },
        ),
    ]
